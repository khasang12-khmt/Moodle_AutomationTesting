# Generated by Selenium IDE
import pytest
import time
import sys
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUpdateCourse():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_course1(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_fullname").click()
      self.driver.find_element(By.ID, "id_fullname").clear()
      self.driver.find_element(By.ID, "id_fullname").send_keys("C")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course2(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_fullname").click()
      self.driver.find_element(By.ID, "id_fullname").clear()
      self.driver.find_element(By.ID, "id_fullname").send_keys("")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      self.driver.find_element(By.ID, "id_error_fullname").click()
      elements = self.driver.find_elements(By.ID, "id_error_fullname")
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
    
  def test_course3(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_fullname").click()
      self.driver.find_element(By.ID, "id_fullname").clear()
      self.driver.find_element(By.ID, "id_fullname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor ")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "id_error_fullname").click()
      elements = self.driver.find_elements(By.ID, "id_error_fullname")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course4(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_fullname").click()
      self.driver.find_element(By.ID, "id_fullname").clear()
      self.driver.find_element(By.ID, "id_fullname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor a")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course5(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_shortname").click()
      self.driver.find_element(By.ID, "id_shortname").clear()
      self.driver.find_element(By.ID, "id_shortname").send_keys("C")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
    
  def test_course6(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_shortname").click()
      self.driver.find_element(By.ID, "id_shortname").clear()
      self.driver.find_element(By.ID, "id_shortname").send_keys("")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course7(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_shortname").click()
      self.driver.find_element(By.ID, "id_shortname").clear()
      self.driver.find_element(By.ID, "id_shortname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor ")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False

  def test_course8(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_shortname").click()
      self.driver.find_element(By.ID, "id_shortname").clear()
      self.driver.find_element(By.ID, "id_shortname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor a")
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course10(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_startdate_day").click()
      dropdown = self.driver.find_element(By.ID, "id_startdate_day")
      dropdown.find_element(By.XPATH, "//option[. = '10']").click()
      self.driver.find_element(By.ID, "id_startdate_month").click()
      self.driver.find_element(By.ID, "id_startdate_month").send_keys('May')
      self.driver.find_element(By.ID, "id_startdate_year").click()
      self.driver.find_element(By.XPATH, "//label[contains(.,\'Enable\')]").click()
      self.driver.find_element(By.ID, "id_enddate_day").click()
      self.driver.find_element(By.ID, "id_enddate_day").send_keys('10')
      self.driver.find_element(By.ID, "id_enddate_month").click()
      self.driver.find_element(By.ID, "id_enddate_month").send_keys('May')
      self.driver.find_element(By.ID, "id_enddate_year").click()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course9(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_startdate_day").click()
      dropdown = self.driver.find_element(By.ID, "id_startdate_day")
      dropdown.find_element(By.XPATH, "//option[. = '10']").click()
      self.driver.find_element(By.ID, "id_startdate_month").click()
      self.driver.find_element(By.ID, "id_startdate_month").send_keys('May')
      self.driver.find_element(By.ID, "id_startdate_year").click()
      self.driver.find_element(By.XPATH, "//label[contains(.,\'Enable\')]").click()
      self.driver.find_element(By.ID, "id_enddate_day").click()
      self.driver.find_element(By.ID, "id_enddate_day").send_keys('11')
      self.driver.find_element(By.ID, "id_enddate_month").click()
      self.driver.find_element(By.ID, "id_enddate_month").send_keys('May')
      self.driver.find_element(By.ID, "id_enddate_year").click()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course11(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_startdate_day").click()
      dropdown = self.driver.find_element(By.ID, "id_startdate_day")
      dropdown.find_element(By.XPATH, "//option[. = '10']").click()
      self.driver.find_element(By.ID, "id_startdate_month").click()
      self.driver.find_element(By.ID, "id_startdate_month").send_keys('May')
      self.driver.find_element(By.ID, "id_startdate_year").click()
      self.driver.find_element(By.XPATH, "//label[contains(.,\'Enable\')]").click()
      self.driver.find_element(By.ID, "id_enddate_day").click()
      self.driver.find_element(By.ID, "id_enddate_day").send_keys('9')
      self.driver.find_element(By.ID, "id_enddate_month").click()
      self.driver.find_element(By.ID, "id_enddate_month").send_keys('May')
      self.driver.find_element(By.ID, "id_enddate_year").click()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      elements = self.driver.find_elements(By.ID, "id_error_enddate")
      assert len(elements) > 0
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course12(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.switch_to.frame(0)
      self.driver.find_element(By.CSS_SELECTOR, "p").click()
      element = self.driver.find_element(By.ID, "tinymce")
      self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>C</p>'}", element)
      self.driver.switch_to.default_content()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course13(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.switch_to.frame(0)
      self.driver.find_element(By.CSS_SELECTOR, "p").click()
      element = self.driver.find_element(By.ID, "tinymce")
      self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p></p>'}", element)
      self.driver.switch_to.default_content()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course14(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.switch_to.frame(0)
      self.driver.find_element(By.CSS_SELECTOR, "p").click()
      element = self.driver.find_element(By.ID, "tinymce")
      self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrue eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis noscia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>'}", element)
      self.driver.switch_to.default_content()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course15(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_startdate_day").click()
      dropdown = self.driver.find_element(By.ID, "id_startdate_day")
      dropdown.find_element(By.XPATH, "//option[. = '31']").click()
      self.driver.find_element(By.ID, "id_startdate_month").click()
      self.driver.find_element(By.ID, "id_startdate_month").send_keys('February')
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course17(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.CSS_SELECTOR, ".fa-file-o").click()
      self.driver.find_element(By.NAME, "repo_upload_file").click()
      self.driver.find_element(By.NAME, "repo_upload_file").send_keys("D:\\BK\\Testing\\Moodle_AutomationTesting\\Level0\\course-image\\normal_img.jpg")
      self.driver.find_element(By.XPATH, "//button[contains(.,\'Upload this file\')]").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course18(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.CSS_SELECTOR, ".fa-file-o").click()
      self.driver.find_element(By.NAME, "repo_upload_file").click()
      self.driver.find_element(By.NAME, "repo_upload_file").send_keys("D:\\BK\\Testing\\Moodle_AutomationTesting\\Level0\\course-image\\zip_file.zip")
      self.driver.find_element(By.XPATH, "//button[contains(.,\'Upload this file\')]").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      elements = self.driver.find_elements(By.XPATH, "//div[3]/div/div/h5")
      assert len(elements) > 0
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course16(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1054, 802)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.ID, "id_startdate_day").click()
      dropdown = self.driver.find_element(By.ID, "id_startdate_day")
      dropdown.find_element(By.XPATH, "//option[. = '10']").click()
      self.driver.find_element(By.ID, "id_startdate_month").click()
      self.driver.find_element(By.ID, "id_startdate_month").send_keys('January')
      self.driver.find_element(By.ID, "id_startdate_year").click()
      self.driver.find_element(By.XPATH, "//label[contains(.,\'Enable\')]").click()
      self.driver.find_element(By.ID, "id_enddate_day").click()
      self.driver.find_element(By.ID, "id_enddate_day").send_keys('31')
      self.driver.find_element(By.ID, "id_enddate_month").click()
      self.driver.find_element(By.ID, "id_enddate_month").send_keys('February')
      self.driver.find_element(By.ID, "id_enddate_year").click()
      self.driver.find_element(By.ID, "id_enddate_year").send_keys('2023')
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course19(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.CSS_SELECTOR, ".fa-file-o").click()
      self.driver.find_element(By.NAME, "repo_upload_file").click()
      self.driver.find_element(By.NAME, "repo_upload_file").send_keys("D:\\BK\\Testing\\Moodle_AutomationTesting\\Level0\\course-image\\large_file.jpg")
      self.driver.find_element(By.XPATH, "//button[contains(.,\'Upload this file\')]").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course20(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.XPATH, "//div[2]/span/span").click()
      self.driver.find_element(By.XPATH, "//span[contains(.,\'▼\')]").click()
      self.driver.find_element(By.XPATH, "//li[contains(.,\'Miscellaneous\')]").click()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test_course21(self):
    print(sys._getframe(0).f_code.co_name)
    try:
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(1056, 804)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.LINK_TEXT, "My courses").click()
      time.sleep(3)
      self.driver.find_element(By.XPATH, "//div[@id=\'course-info-container-2-3\']/div/div/a/span[3]").click()
      self.driver.find_element(By.LINK_TEXT, "Settings").click()
      self.driver.find_element(By.XPATH, "//div[2]/span/span").click()
      self.driver.find_element(By.ID, "id_saveanddisplay").click()
      time.sleep(3)
      elements = self.driver.find_elements(By.ID, "id_error_category")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      self.driver.close()
      return True
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
  
  def test(self, *test_list):
    result = []
    for test in test_list:
        result.append(test())
    fail_test_name = []
    for i in range(0, len(result)):
        if not result[i]:
            fail_test_name.append(test_list[i].__name__)

    fail_test_name_str = 'FAILED:\n\t'+ '\n\t'.join(name for name in fail_test_name) if len(fail_test_name) != 0 else 'Fail testcase: None'
    return f"""
    \n- Test update course (Level 0)--\nPASSED: {result.count(True)}/{len(result)}\n{fail_test_name_str}\n
    """
        
  def run(self):

    self.setup_method(None)

    result = self.test(
    self.test_course1,
    self.test_course2,
    self.test_course3,
    self.test_course4,
    self.test_course5,
    self.test_course6,
    self.test_course7,
    self.test_course8,
    self.test_course9,
    self.test_course10,
    self.test_course11,
    self.test_course12,
    self.test_course13,
    self.test_course14,
    self.test_course15,
    self.test_course16,
    self.test_course17,
    self.test_course18,
    self.test_course19,
    self.test_course20,
    self.test_course21
    )

    self.teardown_method(None)

    return result

updateCourse = TestUpdateCourse()
print(updateCourse.run())