# Generated by Selenium IDE
import time
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.remote.webelement import WebElement
from selenium.webdriver.support import expected_conditions as EC
current_directory = os.path.dirname(__file__)
JS_DROP_FILES = "var k=arguments,d=k[0],g=k[1],c=k[2],m=d.ownerDocument||document;for(var e=0;;){var f=d.getBoundingClientRect(),b=f.left+(g||(f.width/2)),a=f.top+(c||(f.height/2)),h=m.elementFromPoint(b,a);if(h&&d.contains(h)){break}if(++e>1){var j=new Error('Element not interactable');j.code=15;throw j}d.scrollIntoView({behavior:'instant',block:'center',inline:'center'})}var l=m.createElement('INPUT');l.setAttribute('type','file');l.setAttribute('multiple','');l.setAttribute('style','position:fixed;z-index:2147483647;left:0;top:0;');l.onchange=function(q){l.parentElement.removeChild(l);q.stopPropagation();var r={constructor:DataTransfer,effectAllowed:'all',dropEffect:'none',types:['Files'],files:l.files,setData:function u(){},getData:function o(){},clearData:function s(){},setDragImage:function i(){}};if(window.DataTransferItemList){r.items=Object.setPrototypeOf(Array.prototype.map.call(l.files,function(x){return{constructor:DataTransferItem,kind:'file',type:x.type,getAsFile:function v(){return x},getAsString:function y(A){var z=new FileReader();z.onload=function(B){A(B.target.result)};z.readAsText(x)},webkitGetAsEntry:function w(){return{constructor:FileSystemFileEntry,name:x.name,fullPath:'/'+x.name,isFile:true,isDirectory:false,file:function z(A){A(x)}}}}}),{constructor:DataTransferItemList,add:function t(){},clear:function p(){},remove:function n(){}})}['dragenter','dragover','drop'].forEach(function(v){var w=m.createEvent('DragEvent');w.initMouseEvent(v,true,true,m.defaultView,0,0,0,b,a,false,false,false,false,0,null);Object.setPrototypeOf(w,null);w.dataTransfer=r;Object.setPrototypeOf(w,DragEvent.prototype);h.dispatchEvent(w)})};m.documentElement.appendChild(l);l.getBoundingClientRect();return l"

def drop_files(element, files, offsetX=0, offsetY=0):
    driver = element.parent
    isLocal = not driver._is_remote or '127.0.0.1' in driver.command_executor._url
    paths = []
    
    # ensure files are present, and upload to the remote server if session is remote
    for file in (files if isinstance(files, list) else [files]) :
        if not os.path.isfile(file) :
            raise FileNotFoundError(file)
        paths.append(file if isLocal else element._upload(file))
    
    value = '\n'.join(paths)
    elm_input = driver.execute_script(JS_DROP_FILES, element, offsetX, offsetY)
    elm_input._execute('sendKeysToElement', {'value': [value], 'text': value})

    time.sleep(3)

    
WebElement.drop_files = drop_files
class TestProfileUpdate():
  def setup_method(self, method):
    options = webdriver.ChromeOptions()
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    self.driver = webdriver.Chrome(options=options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
    
  def precondtion(self):
      self.driver.get("https://sandbox.moodledemo.net/")
      self.driver.set_window_size(787, 816)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      self.driver.find_element(By.ID, "username").click()
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys("teacher")
      self.driver.find_element(By.ID, "password").click()
      self.driver.find_element(By.ID, "password").send_keys("sandbox")
      self.driver.find_element(By.ID, "loginbtn").click()
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Profile").click()
      self.driver.find_element(By.LINK_TEXT, "Edit profile").click()
      
  def logout(self):
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      
  def test_profileEdit1(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
      except NoSuchElementException as err:
        pass
      time.sleep(3)
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      # Check if found error message
      try:
        self.driver.find_element(By.XPATH, "//*[@id='id_error_firstname']")
      except NoSuchElementException as err:
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click()
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True
  
  def test_profileEdit2(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
      except NoSuchElementException as err:
        pass
      time.sleep(3)
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("a")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")
      
      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
        
      self.driver.find_element(By.ID, "id_submitbutton").click()  
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True

  def test_profileEdit3(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        p
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor2")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      self.driver.find_element(By.ID, "id_submitbutton").click()  
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True

  def test_profileEdit4(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor22")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      self.driver.find_element(By.ID, "id_submitbutton").click()  
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True

  def test_profileEdit5(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor222")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
    
      # Check if firstname is trim down to 100 characters
      text = self.driver.find_element(By.ID, "id_firstname").get_attribute('value')
      if(text != "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor22"):
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    

  def test_profileEdit6(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
      except NoSuchElementException as err:
        pass
      time.sleep(3)
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      # Check if found error message
      try:
        self.driver.find_element(By.XPATH, "//*[@id='id_error_lastname']")
      except NoSuchElementException as err:
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click()
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True
  
  def test_profileEdit7(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
      except NoSuchElementException as err:
        pass
      time.sleep(3)
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("a")
      
      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
        
      self.driver.find_element(By.ID, "id_submitbutton").click()  
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True

  def test_profileEdit8(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        p
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor2")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      self.driver.find_element(By.ID, "id_submitbutton").click()  
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True

  def test_profileEdit9(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")

      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor22")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      self.driver.find_element(By.ID, "id_submitbutton").click()  
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True

  def test_profileEdit10(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor222")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
    
      # Check if firstname is trim down to 100 characters
      text = self.driver.find_element(By.ID, "id_lastname").get_attribute('value')
      if(text != "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labor22"):
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    
  
  def test_profileEdit11(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("")
    
      try:
        self.driver.find_element(By.XPATH, "//*[@id='id_error_email']")
      except NoSuchElementException as err:
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    

  def test_profileEdit12(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("a@b")
    
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    

  def test_profileEdit13(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("nd5whosh40tzivcw4svs0kzpbixd62jplu9vsq909eotaglbt3pqmntq83bc82hlrw04zumf4gw77to2mge5vlxadsdss@gmail")
    
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    

  def test_profileEdit14(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("nd5whosh40tzivcw4svs0kzpbixd62jplu9vsq909eotaglbt3pqmntq83bc82hlrw04zumf4gw77to2mge5vlxadsdsas@gmail")
    
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    

  def test_profileEdit15(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Terri")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Teacher")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("nd5whosh40tzivcw4svs0kzpbixd62jplu9vsq909eotaglbt3pqaamntq83bc82hlrw04zumf4gw77to2mge5vlxadsdss@gmail")
      text = self.driver.find_element(By.ID, "id_email").get_attribute('value')
      if(text != "nd5whosh40tzivcw4svs0kzpbixd62jplu9vsq909eotaglbt3pqaamntq83bc82hlrw04zumf4gw77to2mge5vlxadsdss@gmai"):
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True    

  def test_EqClass_profileEdit1(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Vinh")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\image.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)      
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True   

  def test_EqClass_profileEdit2(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("@#")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\image.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)      
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True 

  def test_EqClass_profileEdit3(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Vinh")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("vin@gmail.com")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\image.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)      
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True   

  def test_EqClass_profileEdit4(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Vinh")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\image.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)      
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True  

  def test_EqClass_profileEdit5(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Vinh")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\image.txt')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)   
         
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".fp-msg-butok").click() 
      except NoSuchElementException as err:
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True  

  def test_EqClass_profileEdit6(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Vinh")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail.com")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\image.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)      
      
      file_path = os.path.abspath('..\\testdata\\vinh\\image2.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)      
      
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".fp-msg-butok").click() 
      except NoSuchElementException as err:
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True  

  def test_EqClass_profileEdit7(self):
    try:
      self.precondtion()
      try:
        self.driver.find_element(By.XPATH, "//a[text()='Cancel email change']").click()
        time.sleep(3)
      except NoSuchElementException as err:
        pass
      self.driver.find_element(By.ID, "id_firstname").click()
      self.driver.find_element(By.ID, "id_firstname").clear()
      self.driver.find_element(By.ID, "id_firstname").send_keys("Vinh")
      
      self.driver.find_element(By.ID, "id_lastname").click()
      self.driver.find_element(By.ID, "id_lastname").clear()
      self.driver.find_element(By.ID, "id_lastname").send_keys("Huynh")

      self.driver.find_element(By.ID, "id_email").click()
      self.driver.find_element(By.ID, "id_email").clear()
      self.driver.find_element(By.ID, "id_email").send_keys("abc@gmail")
      
      wait = WebDriverWait(self.driver, 20)
      file_path = os.path.abspath('..\\testdata\\vinh\\big_image.png')

      wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, '.filemanager-container')))
      drop_target = self.driver.find_element(By.CSS_SELECTOR, '.filemanager-container')
      drop_target.drop_files(file_path)     
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".fp-msg-butok").click() 
      except NoSuchElementException as err:
        raise Exception()
      self.driver.find_element(By.ID, "id_submitbutton").click() 
      self.logout()
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.logout()
      return False
    return True  
       
  def test(self, *test_list):
    result = []
    for test in test_list:
        result.append(test())
    fail_test_name = []
    for i in range(0, len(result)):
        if not result[i]:
            fail_test_name.append(test_list[i].__name__)

    fail_test_name_str = 'FAILED:\n\t'+ '\n\t'.join(name for name in fail_test_name) if len(fail_test_name) != 0 else 'Fail testcase: None'
    return f"""
    \n- Test Profile Edit Course (Level 0)--\nPASSED: {result.count(True)}/{len(result)}\n{fail_test_name_str}\n
    """

  def run(self):
    self.setup_method(None)
    test_methods = []
    test_methods = [method for method in dir(self) if callable(getattr(self, method)) and method.startswith("test_profileEdit")]
    test_methods = sorted(test_methods, key=lambda x: int(x.split('test_profileEdit')[1]))
  
    test_profileEdit_eq_class_methods = [method for method in dir(self) if callable(getattr(self, method)) and method.startswith("test_EqClass_profileEdit")]
    test_profileEdit_eq_class_methods = sorted(test_profileEdit_eq_class_methods, key=lambda x: int(x.split('test_EqClass_profileEdit')[1]))
    
    test_methods = test_methods + test_profileEdit_eq_class_methods

    result = self.test(*map(lambda mname: getattr(self, mname), test_methods))

    self.teardown_method(None)

    return result
  
profileUpdate = TestProfileUpdate()
print(profileUpdate.run())