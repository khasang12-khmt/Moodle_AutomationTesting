# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from BaseTestSuite import BaseTestSuite
from TestRunner import TestRunner

class TestResponsiveSuite(BaseTestSuite):
  def test_responsive(self, test):
    try:
      width, height, is_mobile = test["width"], test["height"], test["is_mobile"]
      self.driver.get("https://school.moodledemo.net/")
      self.driver.set_window_size(width, height)
      self.driver.find_element(By.LINK_TEXT, "Log in").click()
      if self.first_run:
        self.driver.find_element(By.CSS_SELECTOR, ".login-container").click()
        self.driver.find_element(By.ID, "username").send_keys("")
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "username").click()
        self.driver.find_element(By.ID, "username").send_keys("teacher")
        self.driver.find_element(By.ID, "password").click()
        self.first_run = False
      self.driver.find_element(By.ID, "password").send_keys("moodle")
      self.driver.find_element(By.ID, "loginbtn").click()
      
      self.driver.find_element(By.ID, "page-header").click()
      time.sleep(1)
      flag1 = self.driver.find_element(By.ID, "instance-472-header").text == "Course overview"
      
      if(is_mobile):
        self.driver.find_element(By.CSS_SELECTOR, ".navbar-toggler-icon").click()
        
      WebDriverWait(self.driver, 20).until(expected_conditions.presence_of_element_located((By.LINK_TEXT, "Dashboard"))).click()
      flag2 = self.driver.find_element(By.CSS_SELECTOR, ".h2").text == "Dashboard"   

      if (flag1 and flag2) is True:
        self.driver.find_element(By.ID, "user-menu-toggle").click(  )
        self.driver.find_element(By.LINK_TEXT, "Log out").click() 
        return True
      else: 
        self.driver.find_element(By.ID, "user-menu-toggle").click()
        self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False
    except Exception as err:
      print(f"Unexpected {err=}, {type(err)=}")
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      return False

responsiveTestSuite = TestResponsiveSuite('./input/input_responsive.json')
TestRunner.run(responsiveTestSuite,"Responsive")